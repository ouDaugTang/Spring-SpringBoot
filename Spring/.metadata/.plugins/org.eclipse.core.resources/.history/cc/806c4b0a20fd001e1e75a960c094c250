package com.aloha.spring.controller;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;

import com.aloha.spring.dto.Person;

@Controller
public class ModelController {
	
	/**
	 * 요청 경로 : /model/person
	 * @param model
	 * @param person
	 * @return
	 */
	@RequestMapping("/model/person")	// method: GET(기본값)
	public String person(Model model, Person person) {
		// Model 인터페이스의 addAttribute() 메소드로 데이터를 등록하여, 뷰에 전달한다.
		// Model 
		// : 컨트롤러에서 등록한 데이터를 뷰에 전달하는 인터페이스
//		Person person = new Person();
		person.setName("김조은");
		person.setAge(20);
		
		// addAttribute("변수명", 객체) 메소드로 모델에 객체를 등록한다.
		// model.addAttribute("person", person);
		model.addAttribute(person);				// 변수명을 생략하면 객체명과 일치하는 이름으로 접근할 수 있다.
												// view 에서 ${} (표현언어) 로 사용할 수 있다.
												// ${person.name}, ${person.age}
												// getter 메소드가 정의되어 있어야 위와같이 뷰에서 접근할 수 있다.
		return "model/person";					// view : model/person.jsp
	}
	
	/**
	 * 요청 경로 : /model/person2?name=김조은&age=20
	 * 			* 요청 파라미터의 변수명들을 객체의 필드(멤버변수)로 자동으로 매핑해준다.
	 * @param person
	 * @return
	 */
	@RequestMapping("/person2")
	public String person2(Model model, Person person) {
		// @ModelAttribute : 매개변수를 모델에 자동으로 등록해주는 어노테이션
		
		 model.addAttribute("person", person);
		
		return "model/person";				// view : model/person.jsp
	}
}
